<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on /home/mackle/emporium</title><link>https://mackle.io/posts/</link><description>Recent content in Posts on /home/mackle/emporium</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© Stuart Mackle</copyright><lastBuildDate>Sun, 21 Feb 2021 02:57:19 +0000</lastBuildDate><atom:link href="https://mackle.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Distributed Processing: Graph Colouring</title><link>https://mackle.io/posts/distributed-processing-graph-colouring/</link><pubDate>Sun, 21 Feb 2021 02:57:19 +0000</pubDate><guid>https://mackle.io/posts/distributed-processing-graph-colouring/</guid><description>Introduction Last year I was presented with a rather interesting issue which gave me an opportunity to use some latent mathematics knowledge. This post covers the simplest form of the problem where some of the complexity is removed via constraints, which is defined as follows:
Given an entity-relationship(ER) model with only many-to-many relationships and multiple isolated workers with the following properties:
- they can only process a single entity and its relationships concurrently</description></item></channel></rss>